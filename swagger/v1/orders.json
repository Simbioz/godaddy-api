{
  "apiVersion": "0.0.4",
  "swaggerVersion": "1.2",
  "basePath": "https://api.godaddy.com",
  "resourcePath": "/v1/orders",
  "apis": [
    {
      "path": "/v1/orders",
      "operations": [
        {
          "method": "GET",
          "nickname": "list",
          "type": "OrderList",
          "summary": "Retrieve a list of orders for the authenticated shopper. Only one filter may be used at a time",
          "notes": "<strong>API Resellers</strong><ol><li>This endpoint does not support subaccounts and therefore API Resellers should not supply an X-Shopper-Id header</li></ol>",
          "parameters": [
            {
              "name": "periodStart",
              "required": false,
              "paramType": "query",
              "type": "string",
              "pattern": "^[0-9]{4}-(?:0[0-9]{1}|1[0-2]{1})-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "description": "Start of range indicating what time-frame should be returned. Inclusive"
            },
            {
              "name": "periodEnd",
              "required": false,
              "paramType": "query",
              "type": "string",
              "pattern": "^[0-9]{4}-(?:0[0-9]{1}|1[0-2]{1})-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "description": "End of range indicating what time-frame should be returned. Inclusive"
            },
            {
              "name": "domain",
              "required": false,
              "paramType": "query",
              "type": "string",
              "description": "Domain name to use as the filter of results"
            },
            {
              "name": "productGroupId",
              "required": false,
              "paramType": "query",
              "type": "integer",
              "pattern": "^[1-9][0-9]*$",
              "description": "Product group id to use as the filter of results"
            },
            {
              "name": "paymentProfileId",
              "required": false,
              "paramType": "query",
              "type": "integer",
              "pattern": "^[1-9][0-9]*$",
              "description": "Payment profile id to use as the filter of results"
            },
            {
              "name": "parentOrderId",
              "required": false,
              "paramType": "query",
              "type": "string",
              "description": "Parent order id to use as the filter of results"
            },
            {
              "name": "offset",
              "required": false,
              "paramType": "query",
              "type": "integer",
              "defaultValue": 0,
              "description": "Number of results to skip for pagination"
            },
            {
              "name": "limit",
              "required": false,
              "paramType": "query",
              "type": "integer",
              "defaultValue": 25,
              "minimum": 1,
              "maximum": 10000,
              "description": "Maximum number of items to return"
            },
            {
              "name": "sort",
              "required": false,
              "paramType": "query",
              "type": "string",
              "defaultValue": "-createdAt",
              "enum": [
                "createdAt",
                "-createdAt",
                "orderId",
                "-orderId",
                "pricing.total",
                "-pricing.total"
              ],
              "description": "Property name that will be used to sort results. '-' indicates descending"
            },
            {
              "name": "X-Shopper-Id",
              "required": false,
              "paramType": "header",
              "type": "string",
              "description": "Shopper ID to be operated on, if different from JWT<br/><b>Reseller subaccounts are not supported</b>"
            },
            {
              "name": "X-Market-Id",
              "required": false,
              "paramType": "header",
              "type": "string",
              "defaultValue": "en-US",
              "description": "Unique identifier of the Market in which the request is happening"
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "Request was successful",
              "responseModel": "OrderList"
            },
            {
              "code": 400,
              "message": "Request was malformed",
              "responseModel": "Error"
            },
            {
              "code": 401,
              "message": "Authentication info not sent or invalid",
              "responseModel": "Error"
            },
            {
              "code": 403,
              "message": "Authenticated user is not allowed access",
              "responseModel": "Error"
            },
            {
              "code": 429,
              "message": "Too many requests received within interval",
              "responseModel": "ErrorLimit"
            },
            {
              "code": 500,
              "message": "Internal server error",
              "responseModel": "Error"
            },
            {
              "code": 504,
              "message": "Gateway timeout",
              "responseModel": "Error"
            }
          ],
          "consumes": [
            "application/json",
            "application/xml",
            "text/xml"
          ],
          "produces": [
            "application/json",
            "application/javascript",
            "application/xml",
            "text/javascript",
            "text/xml"
          ]
        }
      ]
    },
    {
      "path": "/v1/orders/{orderId}",
      "operations": [
        {
          "method": "GET",
          "nickname": "get",
          "type": "Order",
          "summary": "Retrieve details for specified order",
          "notes": "<strong>API Resellers</strong><ol><li>This endpoint does not support subaccounts and therefore API Resellers should not supply an X-Shopper-Id header</li></ol>",
          "parameters": [
            {
              "name": "orderId",
              "required": true,
              "paramType": "path",
              "type": "string",
              "description": "Order id whose details are to be retrieved"
            },
            {
              "name": "X-Shopper-Id",
              "required": false,
              "paramType": "header",
              "type": "string",
              "description": "Shopper ID to be operated on, if different from JWT<br/><b>Reseller subaccounts are not supported</b>"
            },
            {
              "name": "X-Market-Id",
              "required": false,
              "paramType": "header",
              "type": "string",
              "defaultValue": "en-US",
              "description": "Unique identifier of the Market in which the request is happening"
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "Request was successful",
              "responseModel": "Order"
            },
            {
              "code": 400,
              "message": "Request was malformed",
              "responseModel": "Error"
            },
            {
              "code": 401,
              "message": "Authentication info not sent or invalid",
              "responseModel": "Error"
            },
            {
              "code": 403,
              "message": "Authenticated user is not allowed access",
              "responseModel": "Error"
            },
            {
              "code": 404,
              "message": "Resource not found",
              "responseModel": "Error"
            },
            {
              "code": 429,
              "message": "Too many requests received within interval",
              "responseModel": "ErrorLimit"
            },
            {
              "code": 500,
              "message": "Internal server error",
              "responseModel": "Error"
            },
            {
              "code": 504,
              "message": "Gateway timeout",
              "responseModel": "Error"
            }
          ],
          "consumes": [
            "application/json",
            "application/xml",
            "text/xml"
          ],
          "produces": [
            "application/json",
            "application/javascript",
            "application/xml",
            "text/javascript",
            "text/xml"
          ]
        }
      ]
    }
  ],
  "consumes": [
    "application/json",
    "application/x-www-form-urlencoded",
    "application/xml",
    "text/xml"
  ],
  "produces": [
    "application/json",
    "application/xml",
    "text/xml",
    "application/javascript",
    "text/javascript"
  ],
  "models": {
    "Order": {
      "id": "Order",
      "additionalProperties": false,
      "properties": {
        "orderId": {
          "type": "string",
          "description": "Unique identifier of current order"
        },
        "parentOrderId": {
          "type": "string",
          "description": "Unique identifier of the parent order. All refund/chargeback orders are tied to the original order.\nThe orginal order's `orderId` is the `parentOrderId` of refund/chargeback orders"
        },
        "currency": {
          "type": "string",
          "format": "iso-currency-code",
          "description": "Currency in which the order has been placed"
        },
        "createdAt": {
          "type": "string",
          "format": "iso-datetime",
          "description": "Date and time when the current order is created on"
        },
        "pricing": {
          "$ref": "OrderPricing",
          "description": "Pricing information for current order"
        },
        "billTo": {
          "$ref": "BillTo",
          "description": "The billing contact information that was used at the time of purchase"
        },
        "payments": {
          "type": "array",
          "items": {
            "$ref": "Payment"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "LineItem"
          }
        }
      },
      "required": [
        "orderId",
        "currency",
        "createdAt",
        "pricing",
        "billTo",
        "payments",
        "items"
      ]
    },
    "OrderPricing": {
      "id": "OrderPricing",
      "additionalProperties": false,
      "properties": {
        "total": {
          "type": "integer",
          "format": "currency-micro-unit",
          "description": "Price the customer pays <pre>`total` = `subtotal` + `taxes` + `fees.total`</pre>"
        },
        "subtotal": {
          "type": "integer",
          "format": "currency-micro-unit",
          "description": "Price with `discount` and without taxes or fees"
        },
        "list": {
          "type": "integer",
          "format": "currency-micro-unit",
          "description": "Sum of list prices for the entire cart"
        },
        "savings": {
          "type": "integer",
          "format": "currency-micro-unit",
          "description": "Savings off of list price <pre>`savings` = `list` - `subtotal`</pre>"
        },
        "discount": {
          "type": "integer",
          "format": "currency-micro-unit",
          "description": "Discount from promotional pricing"
        },
        "taxes": {
          "type": "integer",
          "format": "currency-micro-unit",
          "description": "Taxes for the entire cart"
        },
        "fees": {
          "$ref": "OrderFee",
          "description": "Fees for the entire cart"
        },
        "id": {
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "total",
        "subtotal",
        "list",
        "savings",
        "discount",
        "taxes",
        "fees"
      ]
    },
    "OrderFee": {
      "id": "OrderFee",
      "additionalProperties": false,
      "properties": {
        "total": {
          "type": "integer",
          "format": "currency-micro-unit",
          "description": "Sum of all fees"
        },
        "icann": {
          "type": "integer",
          "format": "currency-micro-unit",
          "description": "Domain registration transaction fee charged by ICANN"
        }
      },
      "required": [
        "total"
      ]
    },
    "BillTo": {
      "id": "BillTo",
      "additionalProperties": false,
      "properties": {
        "taxId": {
          "type": "string",
          "description": "Tax id used for calculating the tax the customer is required to pay"
        },
        "contact": {
          "$ref": "Contact",
          "description": "Billing contact"
        }
      },
      "required": [
        "contact"
      ]
    },
    "Contact": {
      "id": "Contact",
      "additionalProperties": false,
      "properties": {
        "nameFirst": {
          "type": "string",
          "format": "person-name",
          "maxLength": 30
        },
        "nameMiddle": {
          "type": "string"
        },
        "nameLast": {
          "type": "string",
          "format": "person-name",
          "maxLength": 30
        },
        "organization": {
          "type": "string",
          "format": "organization-name",
          "maxLength": 100
        },
        "jobTitle": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email",
          "maxLength": 80
        },
        "phone": {
          "type": "string",
          "format": "phone",
          "maxLength": 17
        },
        "fax": {
          "type": "string",
          "format": "phone",
          "maxLength": 17
        },
        "addressMailing": {
          "$ref": "Address"
        }
      },
      "required": [
        "nameFirst",
        "nameLast",
        "email",
        "phone",
        "addressMailing"
      ]
    },
    "Address": {
      "id": "Address",
      "additionalProperties": false,
      "properties": {
        "address1": {
          "type": "string",
          "format": "street-address",
          "maxLength": 41
        },
        "address2": {
          "type": "string",
          "format": "street-address2",
          "maxLength": 41
        },
        "city": {
          "type": "string",
          "format": "city-name",
          "maxLength": 30
        },
        "state": {
          "type": "string",
          "format": "state-province-territory",
          "minLength": 2,
          "maxLength": 30,
          "description": "State or province or territory"
        },
        "postalCode": {
          "type": "string",
          "format": "postal-code",
          "minLength": 2,
          "maxLength": 10,
          "description": "Postal or zip code"
        },
        "country": {
          "type": "string",
          "format": "iso-country-code",
          "defaultValue": "US",
          "enum": [
            "AC",
            "AD",
            "AE",
            "AF",
            "AG",
            "AI",
            "AL",
            "AM",
            "AO",
            "AQ",
            "AR",
            "AS",
            "AT",
            "AU",
            "AW",
            "AX",
            "AZ",
            "BA",
            "BB",
            "BD",
            "BE",
            "BF",
            "BG",
            "BH",
            "BI",
            "BJ",
            "BM",
            "BN",
            "BO",
            "BQ",
            "BR",
            "BS",
            "BT",
            "BV",
            "BW",
            "BY",
            "BZ",
            "CA",
            "CC",
            "CD",
            "CF",
            "CG",
            "CH",
            "CI",
            "CK",
            "CL",
            "CM",
            "CN",
            "CO",
            "CR",
            "CV",
            "CW",
            "CX",
            "CY",
            "CZ",
            "DE",
            "DJ",
            "DK",
            "DM",
            "DO",
            "DZ",
            "EC",
            "EE",
            "EG",
            "EH",
            "ER",
            "ES",
            "ET",
            "FI",
            "FJ",
            "FK",
            "FM",
            "FO",
            "FR",
            "GA",
            "GB",
            "GD",
            "GE",
            "GF",
            "GG",
            "GH",
            "GI",
            "GL",
            "GM",
            "GN",
            "GP",
            "GQ",
            "GR",
            "GS",
            "GT",
            "GU",
            "GW",
            "GY",
            "HK",
            "HM",
            "HN",
            "HR",
            "HT",
            "HU",
            "ID",
            "IE",
            "IL",
            "IM",
            "IN",
            "IO",
            "IQ",
            "IS",
            "IT",
            "JE",
            "JM",
            "JO",
            "JP",
            "KE",
            "KG",
            "KH",
            "KI",
            "KM",
            "KN",
            "KR",
            "KV",
            "KW",
            "KY",
            "KZ",
            "LA",
            "LB",
            "LC",
            "LI",
            "LK",
            "LR",
            "LS",
            "LT",
            "LU",
            "LV",
            "LY",
            "MA",
            "MC",
            "MD",
            "ME",
            "MG",
            "MH",
            "MK",
            "ML",
            "MM",
            "MN",
            "MO",
            "MP",
            "MQ",
            "MR",
            "MS",
            "MT",
            "MU",
            "MV",
            "MW",
            "MX",
            "MY",
            "MZ",
            "NA",
            "NC",
            "NE",
            "NF",
            "NG",
            "NI",
            "NL",
            "NO",
            "NP",
            "NR",
            "NU",
            "NZ",
            "OM",
            "PA",
            "PE",
            "PF",
            "PG",
            "PH",
            "PK",
            "PL",
            "PM",
            "PN",
            "PR",
            "PS",
            "PT",
            "PW",
            "PY",
            "QA",
            "RE",
            "RO",
            "RS",
            "RU",
            "RW",
            "SA",
            "SB",
            "SC",
            "SE",
            "SG",
            "SH",
            "SI",
            "SJ",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SR",
            "ST",
            "SV",
            "SX",
            "SZ",
            "TC",
            "TD",
            "TF",
            "TG",
            "TH",
            "TJ",
            "TK",
            "TL",
            "TM",
            "TN",
            "TO",
            "TP",
            "TR",
            "TT",
            "TV",
            "TW",
            "TZ",
            "UA",
            "UG",
            "UM",
            "US",
            "UY",
            "UZ",
            "VA",
            "VC",
            "VE",
            "VG",
            "VI",
            "VN",
            "VU",
            "WF",
            "WS",
            "YE",
            "YT",
            "ZA",
            "ZM",
            "ZW"
          ],
          "description": "Two-letter ISO country code to be used as a hint for target region<br/><br/>\nNOTE: These are sample values, there are many\n<a href='http://www.iso.org/iso/country_codes.htm'>more</a>"
        }
      },
      "required": [
        "address1",
        "city",
        "state",
        "postalCode",
        "country"
      ]
    },
    "Payment": {
      "id": "Payment",
      "additionalProperties": false,
      "properties": {
        "paymentProfileId": {
          "type": "string",
          "description": "Unique identifier of the payment profile used by current payment"
        },
        "amount": {
          "type": "integer",
          "format": "currency-micro-unit",
          "description": "Amount paid by the current payment"
        },
        "category": {
          "type": "string",
          "required": true,
          "enum": [
            "CREDIT_CARD",
            "PAYPAL",
            "ACH",
            "GIFT_CARD",
            "IN_STORE_CREDIT",
            "PREPAID"
          ],
          "description": [
            "The category of payment method used at the time of purchase.",
            "Most common values are listed in the enum."
          ]
        },
        "subcategory": {
          "type": "string",
          "required": false,
          "enum": [
            "CHECKING_PERSONAL",
            "CHECKING_BUSINESS",
            "VISA",
            "MASTER_CARD",
            "AMEX",
            "JCB",
            "UNIONPAY"
          ],
          "description": [
            "The subcategory of payment method used at the time of purchase.",
            "This field is only set for certain payment categories, such as ACH and CREDIT_CARD.",
            "Most common values are listed in the enum."
          ]
        }
      },
      "required": [
        "paymentProfileId",
        "amount",
        "category"
      ]
    },
    "LineItem": {
      "id": "LineItem",
      "additionalProperties": false,
      "properties": {
        "label": {
          "type": "string",
          "description": "Human readable description of the current product"
        },
        "pfid": {
          "type": "integer",
          "description": "Unique identifier of the current product"
        },
        "quantity": {
          "type": "integer",
          "format": "integer-positive",
          "description": "Number of the current product included in the specified order"
        },
        "period": {
          "type": "number",
          "format": "double",
          "defaultValue": 1
        },
        "periodUnit": {
          "type": "string",
          "defaultValue": "MONTH",
          "enum": [
            "MONTH",
            "QUARTER",
            "SEMI_ANNUAL",
            "YEAR",
            "ONE_TIME"
          ],
          "description": "The unit of time that periodCount is measured in"
        },
        "pricing": {
          "$ref": "LineItemPricing",
          "description": "Pricing information of the current line item"
        },
        "taxCollector": {
          "$ref": "LineItemTaxCollector",
          "description": "Company that collects taxes on the sale of the product"
        },
        "domains": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of domain names purchased if the current product is domain"
        }
      },
      "required": [
        "label",
        "quantity",
        "pricing"
      ]
    },
    "LineItemPricing": {
      "id": "LineItemPricing",
      "additionalProperties": false,
      "properties": {
        "subtotal": {
          "type": "integer",
          "format": "currency-micro-unit",
          "description": "Price with any discounts and without taxes or fees for given `quantity` and `period`"
        },
        "list": {
          "type": "integer",
          "format": "currency-micro-unit",
          "description": "List price for given `quantity` and `period`"
        },
        "savings": {
          "type": "integer",
          "format": "currency-micro-unit",
          "description": "Savings off of list price for given `quantity` and `period` <pre>`savings` = `list` - `subtotal`</pre>"
        },
        "sale": {
          "type": "integer",
          "format": "currency-micro-unit",
          "description": "Actual price for the current product"
        },
        "discount": {
          "type": "integer",
          "format": "currency-micro-unit",
          "description": "Discount off of sale price for given `quantity` and `period` <pre>`discount` = `sale` - `subtotal`</pre>"
        },
        "taxes": {
          "type": "integer",
          "format": "currency-micro-unit",
          "description": "Taxes for given `quantity` and `period`"
        },
        "fees": {
          "$ref": "OrderFee",
          "description": "Fees for given `quantity` and `period`"
        },
        "unit": {
          "$ref": "LineItemUnitPricing",
          "type": "object",
          "description": "Pricing for a single unit of the given item"
        }
      },
      "required": [
        "subtotal",
        "list",
        "savings",
        "sale",
        "discount",
        "taxes",
        "fees",
        "unit"
      ]
    },
    "LineItemUnitPricing": {
      "id": "LineItemUnitPricing",
      "additionalProperties": false,
      "properties": {
        "list": {
          "type": "integer",
          "format": "currency-micro-unit",
          "description": "List price without consideration of `quantity` and `period`"
        },
        "savings": {
          "type": "integer",
          "format": "currency-micro-unit",
          "description": "Savings without consideration of `quantity` and `period`"
        },
        "sale": {
          "type": "integer",
          "format": "currency-micro-unit",
          "description": "Sale price without consideration of `quantity` and `period`"
        },
        "discount": {
          "type": "integer",
          "format": "currency-micro-unit",
          "description": "Discount without consideration of `quantity` and `period`"
        },
        "taxes": {
          "type": "integer",
          "format": "currency-micro-unit",
          "description": "Taxes without consideration of `quantity` and `period`"
        },
        "fees": {
          "$ref": "OrderFee",
          "description": "Fees without consideration of `quantity` and `period`"
        }
      },
      "required": [
        "discount",
        "fees",
        "list",
        "sale",
        "savings",
        "taxes"
      ]
    },
    "OrderList": {
      "id": "OrderList",
      "additionalProperties": false,
      "properties": {
        "orders": {
          "type": "array",
          "items": {
            "$ref": "OrderSummary"
          },
          "description": "A collection of orders"
        },
        "pagination": {
          "$ref": "Pagination",
          "description": "Pagination information"
        }
      },
      "required": [
        "orders",
        "pagination"
      ]
    },
    "OrderSummary": {
      "id": "OrderSummary",
      "additionalProperties": false,
      "properties": {
        "orderId": {
          "type": "integer",
          "description": "Unique identifier of the current order"
        },
        "parentOrderId": {
          "type": "string",
          "description": "Unique identifier of the parent order. All refund/chargeback orders are tied to the original order.\nThe orginal order's `orderId` is the `parentOrderId` of refund/chargeback orders"
        },
        "currency": {
          "type": "string",
          "format": "iso-currency-code",
          "description": "Currency in which the order was placed"
        },
        "createdAt": {
          "type": "string",
          "format": "iso-datetime",
          "description": "Date and time when the current order was created"
        },
        "pricing": {
          "$ref": "OrderSummaryPricing",
          "description": "Pricing information of the current order"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "LineItemSummary"
          },
          "description": "Sets of two or more line items in current order"
        }
      },
      "required": [
        "orderId",
        "currency",
        "createdAt",
        "pricing",
        "items"
      ]
    },
    "OrderSummaryPricing": {
      "id": "OrderSummaryPricing",
      "additionalProperties": false,
      "properties": {
        "total": {
          "type": "string",
          "format": "currency-micro-unit",
          "description": "Total amount charged for the current order. Negative for Refund and Chargeback"
        }
      },
      "required": [
        "total"
      ]
    },
    "LineItemTaxCollector": {
      "id": "LineItemTaxCollector",
      "additionalProperties": false,
      "properties": {
        "taxCollectorId": {
          "type": "integer",
          "format": "integer-positive",
          "description": "Unique identifier for the company"
        }
      },
      "required": [
        "taxCollectorId"
      ]
    },
    "LineItemSummary": {
      "id": "LineItemSummary",
      "additionalProperties": false,
      "properties": {
        "label": {
          "type": "string",
          "description": "Product label of the current line item"
        }
      },
      "required": [
        "label"
      ]
    },
    "Pagination": {
      "id": "Pagination",
      "additionalProperties": false,
      "properties": {
        "first": {
          "type": "string",
          "description": "URI to access the first page"
        },
        "previous": {
          "type": "string",
          "description": "URI to access the previous page"
        },
        "next": {
          "type": "string",
          "description": "URI to access the next page"
        },
        "last": {
          "type": "string",
          "description": "URI to access the last page"
        },
        "total": {
          "type": "integer",
          "description": "Number of records available"
        }
      },
      "required": []
    },
    "Error": {
      "id": "Error",
      "additionalProperties": false,
      "properties": {
        "code": {
          "type": "string",
          "format": "constant",
          "pattern": "^[A-Z_][A-Z0-9_]*$",
          "description": "Short identifier for the error, suitable for indicating the specific error within client code"
        },
        "message": {
          "type": "string",
          "description": "Human-readable, English description of the error"
        },
        "fields": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "ErrorField"
          },
          "description": "List of the specific fields, and the errors found with their contents"
        }
      },
      "required": [
        "code"
      ]
    },
    "ErrorField": {
      "id": "ErrorField",
      "additionalProperties": false,
      "properties": {
        "path": {
          "type": "string",
          "format": "json-path",
          "pattern": "^[a-z_]([a-zA-Z0-9_.]*)*$",
          "description": "<ul>\n<li style='margin-left: 12px;'>JSONPath referring to a field containing an error</li>\n<strong style='margin-left: 12px;'>OR</strong>\n<li style='margin-left: 12px;'>JSONPath referring to a field that refers to an object containing an error, with more detail in `pathRelated`</li>\n</ul>"
        },
        "pathRelated": {
          "type": "string",
          "format": "json-path",
          "pattern": "^[a-z_]([a-zA-Z0-9_.]*)*$",
          "description": "JSONPath referring to a field containing an error, which is referenced by `path`"
        },
        "code": {
          "type": "string",
          "format": "constant",
          "pattern": "^[A-Z_][A-Z0-9_]*$",
          "description": "Short identifier for the error, suitable for indicating the specific error within client code"
        },
        "message": {
          "type": "string",
          "description": "Human-readable, English description of the problem with the contents of the field"
        }
      },
      "required": [
        "path",
        "code"
      ]
    },
    "ErrorLimit": {
      "id": "ErrorLimit",
      "additionalProperties": false,
      "properties": {
        "retryAfterSec": {
          "type": "integer",
          "format": "integer-positive",
          "description": "Number of seconds to wait before attempting a similar request"
        },
        "code": {
          "type": "string",
          "format": "constant",
          "pattern": "^[A-Z_][A-Z0-9_]*$",
          "description": "Short identifier for the error, suitable for indicating the specific error within client code"
        },
        "message": {
          "type": "string",
          "description": "Human-readable, English description of the error"
        },
        "fields": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "ErrorField"
          },
          "description": "List of the specific fields, and the errors found with their contents"
        }
      },
      "required": [
        "retryAfterSec",
        "code"
      ]
    }
  }
}